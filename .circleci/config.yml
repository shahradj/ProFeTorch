version: 2
jobs:
  test:
    docker:
      - image: ubuntu
    steps:
      - checkout
      # - run:
      #     name: Install Requirements
      #     command: |
      #       pip install -r requirements.txt
      - run:
          name: Install Docker client
          command: |
            apt-get update && apt-get install -y curl python3 git
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin

      - run:
          name: Build Docker
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            chmod +x ./Docker/build_script.py
            python3 ./Docker/build_script.py 0.1.$CIRCLE_BUILD_NUM
      # - run:
      #     name: Test Modules
      #     command: |
      #       python -m nose2
workflows:
  version: 2
  flows:
    jobs:
      - test
  # docker_build:
  #   docker:
  #     - image: ubuntu   # (1)
  #   working_directory: ~/build
  #   steps:
  #     - checkout
  #     - setup_remote_docker:
  #         reusable: true

  #     # use a primary image that already has Docker (recommended)
  #     # or install it during a build like we do here
  #     - run:
  #         name: Install Docker client
  #         command: |
  #           apt-get update && apt-get install -y curl python3 git
  #           set -x
  #           VER="latest"
  #           curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
  #           tar -xz -C /tmp -f /tmp/docker-$VER.tgz
  #           mv /tmp/docker/* /usr/bin

  #     # build and push Docker image
  #     - run: |
  #         docker login -u $DOCKER_USER -p $DOCKER_PASS
  #         chmod +x build_script.py
  #         python3 build_script.py 0.1.$CIRCLE_BUILD_NUM